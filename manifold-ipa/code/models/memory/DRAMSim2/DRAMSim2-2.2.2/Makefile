# Makefile.in generated by automake 1.14.1 from Makefile.am.
# DRAMSim2-2.2.2/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/manifold_dramsim2
pkgincludedir = $(includedir)/manifold_dramsim2
pkglibdir = $(libdir)/manifold_dramsim2
pkglibexecdir = $(libexecdir)/manifold_dramsim2
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = DRAMSim2-2.2.2
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(pkginclude_DRAMSim2proper_HEADERS) \
	README
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(DRAMSim2properlibdir)" \
	"$(DESTDIR)$(pkginclude_DRAMSim2properdir)"
LIBRARIES = $(DRAMSim2properlib_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libDRAMSim2proper_a_AR = $(AR) $(ARFLAGS)
libDRAMSim2proper_a_LIBADD =
am_libDRAMSim2proper_a_OBJECTS =  \
	libDRAMSim2proper_a-AddressMapping.$(OBJEXT) \
	libDRAMSim2proper_a-Bank.$(OBJEXT) \
	libDRAMSim2proper_a-BankState.$(OBJEXT) \
	libDRAMSim2proper_a-BusPacket.$(OBJEXT) \
	libDRAMSim2proper_a-ClockDomain.$(OBJEXT) \
	libDRAMSim2proper_a-CommandQueue.$(OBJEXT) \
	libDRAMSim2proper_a-IniReader.$(OBJEXT) \
	libDRAMSim2proper_a-MemoryController.$(OBJEXT) \
	libDRAMSim2proper_a-MemorySystem.$(OBJEXT) \
	libDRAMSim2proper_a-MultiChannelMemorySystem.$(OBJEXT) \
	libDRAMSim2proper_a-Rank.$(OBJEXT) \
	libDRAMSim2proper_a-SimulatorObject.$(OBJEXT) \
	libDRAMSim2proper_a-Transaction.$(OBJEXT)
libDRAMSim2proper_a_OBJECTS = $(am_libDRAMSim2proper_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libDRAMSim2proper_a_SOURCES)
DIST_SOURCES = $(libDRAMSim2proper_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(pkginclude_DRAMSim2proper_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2/missing autoconf
AUTOHEADER = ${SHELL} /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2/missing autoheader
AUTOMAKE = ${SHELL} /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2/missing automake-1.14
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = mpic++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"FULL-PACKAGE-NAME\" -DPACKAGE_TARNAME=\"full-package-name\" -DPACKAGE_VERSION=\"VERSION\" -DPACKAGE_STRING=\"FULL-PACKAGE-NAME\ VERSION\" -DPACKAGE_BUGREPORT=\"BUG-REPORT-ADDRESS\" -DPACKAGE_URL=\"\" -DPACKAGE=\"manifold_dramsim2\" -DVERSION=\"1.0\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE__BOOL=1 -DHAVE_STDBOOL_H=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KERINC = $(top_srcdir)/../../..
KERNEL_INC = $(top_srcdir)/../../..
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2/missing makeinfo
MKDIR_P = /bin/mkdir -p
MPICPP = mpic++
OBJEXT = o
PACKAGE = manifold_dramsim2
PACKAGE_BUGREPORT = BUG-REPORT-ADDRESS
PACKAGE_NAME = FULL-PACKAGE-NAME
PACKAGE_STRING = FULL-PACKAGE-NAME VERSION
PACKAGE_TARNAME = full-package-name
PACKAGE_URL = 
PACKAGE_VERSION = VERSION
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.0
abs_builddir = /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2/DRAMSim2-2.2.2
abs_srcdir = /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2/DRAMSim2-2.2.2
abs_top_builddir = /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2
abs_top_srcdir = /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/casl/Documents/manifold_0_12_ei/manifold-ipa/code/models/memory/DRAMSim2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
DRAMSim2properlib_LIBRARIES = libDRAMSim2proper.a
DRAMSim2properlibdir = $(libdir)/manifold
libDRAMSim2proper_a_SOURCES = \
        AddressMapping.cpp \
	AddressMapping.h \
	Bank.cpp \
	Bank.h \
	BankState.cpp \
	BankState.h \
	BusPacket.cpp \
	BusPacket.h \
	ClockDomain.cpp \
	ClockDomain.h \
	CommandQueue.cpp \
	CommandQueue.h \
	CSVWriter.h \
	IniReader.cpp \
	IniReader.h \
	MemoryController.cpp \
	MemoryController.h \
	MemorySystem.cpp \
	MemorySystem.h \
	MultiChannelMemorySystem.cpp \
	MultiChannelMemorySystem.h \
	Rank.cpp \
	Rank.h \
	SimulatorObject.cpp \
	SystemConfiguration.h \
	Transaction.cpp \
	Transaction.h

pkginclude_DRAMSim2properdir = $(includedir)/manifold/DRAMSim2
pkginclude_DRAMSim2proper_HEADERS = \
	AddressMapping.h \
	Bank.h \
	BankState.h \
	BusPacket.h \
	Callback.h \
	ClockDomain.h \
	CommandQueue.h \
	CSVWriter.h \
	IniReader.h \
	MemoryController.h \
	MemorySystem.h \
	MultiChannelMemorySystem.h \
	PrintMacros.h \
	Rank.h \
	SimulatorObject.h \
	SystemConfiguration.h \
	Transaction.h

libDRAMSim2proper_a_CPPFLAGS = -DNO_STORAGE -Wall -DDEBUG_BUILD -DLOG_OUTPUT
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu DRAMSim2-2.2.2/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu DRAMSim2-2.2.2/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-DRAMSim2properlibLIBRARIES: $(DRAMSim2properlib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(DRAMSim2properlib_LIBRARIES)'; test -n "$(DRAMSim2properlibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(DRAMSim2properlibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(DRAMSim2properlibdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(DRAMSim2properlibdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(DRAMSim2properlibdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(DRAMSim2properlib_LIBRARIES)'; test -n "$(DRAMSim2properlibdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(DRAMSim2properlibdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(DRAMSim2properlibdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-DRAMSim2properlibLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(DRAMSim2properlib_LIBRARIES)'; test -n "$(DRAMSim2properlibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(DRAMSim2properlibdir)'; $(am__uninstall_files_from_dir)

clean-DRAMSim2properlibLIBRARIES:
	-test -z "$(DRAMSim2properlib_LIBRARIES)" || rm -f $(DRAMSim2properlib_LIBRARIES)

libDRAMSim2proper.a: $(libDRAMSim2proper_a_OBJECTS) $(libDRAMSim2proper_a_DEPENDENCIES) $(EXTRA_libDRAMSim2proper_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libDRAMSim2proper.a
	$(AM_V_AR)$(libDRAMSim2proper_a_AR) libDRAMSim2proper.a $(libDRAMSim2proper_a_OBJECTS) $(libDRAMSim2proper_a_LIBADD)
	$(AM_V_at)$(RANLIB) libDRAMSim2proper.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libDRAMSim2proper_a-AddressMapping.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-Bank.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-BankState.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-BusPacket.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-ClockDomain.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-CommandQueue.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-IniReader.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-MemoryController.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-MemorySystem.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-MultiChannelMemorySystem.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-Rank.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-SimulatorObject.Po
include ./$(DEPDIR)/libDRAMSim2proper_a-Transaction.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libDRAMSim2proper_a-AddressMapping.o: AddressMapping.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-AddressMapping.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-AddressMapping.Tpo -c -o libDRAMSim2proper_a-AddressMapping.o `test -f 'AddressMapping.cpp' || echo '$(srcdir)/'`AddressMapping.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-AddressMapping.Tpo $(DEPDIR)/libDRAMSim2proper_a-AddressMapping.Po
#	$(AM_V_CXX)source='AddressMapping.cpp' object='libDRAMSim2proper_a-AddressMapping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-AddressMapping.o `test -f 'AddressMapping.cpp' || echo '$(srcdir)/'`AddressMapping.cpp

libDRAMSim2proper_a-AddressMapping.obj: AddressMapping.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-AddressMapping.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-AddressMapping.Tpo -c -o libDRAMSim2proper_a-AddressMapping.obj `if test -f 'AddressMapping.cpp'; then $(CYGPATH_W) 'AddressMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/AddressMapping.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-AddressMapping.Tpo $(DEPDIR)/libDRAMSim2proper_a-AddressMapping.Po
#	$(AM_V_CXX)source='AddressMapping.cpp' object='libDRAMSim2proper_a-AddressMapping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-AddressMapping.obj `if test -f 'AddressMapping.cpp'; then $(CYGPATH_W) 'AddressMapping.cpp'; else $(CYGPATH_W) '$(srcdir)/AddressMapping.cpp'; fi`

libDRAMSim2proper_a-Bank.o: Bank.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-Bank.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-Bank.Tpo -c -o libDRAMSim2proper_a-Bank.o `test -f 'Bank.cpp' || echo '$(srcdir)/'`Bank.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-Bank.Tpo $(DEPDIR)/libDRAMSim2proper_a-Bank.Po
#	$(AM_V_CXX)source='Bank.cpp' object='libDRAMSim2proper_a-Bank.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-Bank.o `test -f 'Bank.cpp' || echo '$(srcdir)/'`Bank.cpp

libDRAMSim2proper_a-Bank.obj: Bank.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-Bank.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-Bank.Tpo -c -o libDRAMSim2proper_a-Bank.obj `if test -f 'Bank.cpp'; then $(CYGPATH_W) 'Bank.cpp'; else $(CYGPATH_W) '$(srcdir)/Bank.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-Bank.Tpo $(DEPDIR)/libDRAMSim2proper_a-Bank.Po
#	$(AM_V_CXX)source='Bank.cpp' object='libDRAMSim2proper_a-Bank.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-Bank.obj `if test -f 'Bank.cpp'; then $(CYGPATH_W) 'Bank.cpp'; else $(CYGPATH_W) '$(srcdir)/Bank.cpp'; fi`

libDRAMSim2proper_a-BankState.o: BankState.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-BankState.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-BankState.Tpo -c -o libDRAMSim2proper_a-BankState.o `test -f 'BankState.cpp' || echo '$(srcdir)/'`BankState.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-BankState.Tpo $(DEPDIR)/libDRAMSim2proper_a-BankState.Po
#	$(AM_V_CXX)source='BankState.cpp' object='libDRAMSim2proper_a-BankState.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-BankState.o `test -f 'BankState.cpp' || echo '$(srcdir)/'`BankState.cpp

libDRAMSim2proper_a-BankState.obj: BankState.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-BankState.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-BankState.Tpo -c -o libDRAMSim2proper_a-BankState.obj `if test -f 'BankState.cpp'; then $(CYGPATH_W) 'BankState.cpp'; else $(CYGPATH_W) '$(srcdir)/BankState.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-BankState.Tpo $(DEPDIR)/libDRAMSim2proper_a-BankState.Po
#	$(AM_V_CXX)source='BankState.cpp' object='libDRAMSim2proper_a-BankState.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-BankState.obj `if test -f 'BankState.cpp'; then $(CYGPATH_W) 'BankState.cpp'; else $(CYGPATH_W) '$(srcdir)/BankState.cpp'; fi`

libDRAMSim2proper_a-BusPacket.o: BusPacket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-BusPacket.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-BusPacket.Tpo -c -o libDRAMSim2proper_a-BusPacket.o `test -f 'BusPacket.cpp' || echo '$(srcdir)/'`BusPacket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-BusPacket.Tpo $(DEPDIR)/libDRAMSim2proper_a-BusPacket.Po
#	$(AM_V_CXX)source='BusPacket.cpp' object='libDRAMSim2proper_a-BusPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-BusPacket.o `test -f 'BusPacket.cpp' || echo '$(srcdir)/'`BusPacket.cpp

libDRAMSim2proper_a-BusPacket.obj: BusPacket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-BusPacket.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-BusPacket.Tpo -c -o libDRAMSim2proper_a-BusPacket.obj `if test -f 'BusPacket.cpp'; then $(CYGPATH_W) 'BusPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/BusPacket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-BusPacket.Tpo $(DEPDIR)/libDRAMSim2proper_a-BusPacket.Po
#	$(AM_V_CXX)source='BusPacket.cpp' object='libDRAMSim2proper_a-BusPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-BusPacket.obj `if test -f 'BusPacket.cpp'; then $(CYGPATH_W) 'BusPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/BusPacket.cpp'; fi`

libDRAMSim2proper_a-ClockDomain.o: ClockDomain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-ClockDomain.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-ClockDomain.Tpo -c -o libDRAMSim2proper_a-ClockDomain.o `test -f 'ClockDomain.cpp' || echo '$(srcdir)/'`ClockDomain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-ClockDomain.Tpo $(DEPDIR)/libDRAMSim2proper_a-ClockDomain.Po
#	$(AM_V_CXX)source='ClockDomain.cpp' object='libDRAMSim2proper_a-ClockDomain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-ClockDomain.o `test -f 'ClockDomain.cpp' || echo '$(srcdir)/'`ClockDomain.cpp

libDRAMSim2proper_a-ClockDomain.obj: ClockDomain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-ClockDomain.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-ClockDomain.Tpo -c -o libDRAMSim2proper_a-ClockDomain.obj `if test -f 'ClockDomain.cpp'; then $(CYGPATH_W) 'ClockDomain.cpp'; else $(CYGPATH_W) '$(srcdir)/ClockDomain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-ClockDomain.Tpo $(DEPDIR)/libDRAMSim2proper_a-ClockDomain.Po
#	$(AM_V_CXX)source='ClockDomain.cpp' object='libDRAMSim2proper_a-ClockDomain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-ClockDomain.obj `if test -f 'ClockDomain.cpp'; then $(CYGPATH_W) 'ClockDomain.cpp'; else $(CYGPATH_W) '$(srcdir)/ClockDomain.cpp'; fi`

libDRAMSim2proper_a-CommandQueue.o: CommandQueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-CommandQueue.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-CommandQueue.Tpo -c -o libDRAMSim2proper_a-CommandQueue.o `test -f 'CommandQueue.cpp' || echo '$(srcdir)/'`CommandQueue.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-CommandQueue.Tpo $(DEPDIR)/libDRAMSim2proper_a-CommandQueue.Po
#	$(AM_V_CXX)source='CommandQueue.cpp' object='libDRAMSim2proper_a-CommandQueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-CommandQueue.o `test -f 'CommandQueue.cpp' || echo '$(srcdir)/'`CommandQueue.cpp

libDRAMSim2proper_a-CommandQueue.obj: CommandQueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-CommandQueue.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-CommandQueue.Tpo -c -o libDRAMSim2proper_a-CommandQueue.obj `if test -f 'CommandQueue.cpp'; then $(CYGPATH_W) 'CommandQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandQueue.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-CommandQueue.Tpo $(DEPDIR)/libDRAMSim2proper_a-CommandQueue.Po
#	$(AM_V_CXX)source='CommandQueue.cpp' object='libDRAMSim2proper_a-CommandQueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-CommandQueue.obj `if test -f 'CommandQueue.cpp'; then $(CYGPATH_W) 'CommandQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandQueue.cpp'; fi`

libDRAMSim2proper_a-IniReader.o: IniReader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-IniReader.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-IniReader.Tpo -c -o libDRAMSim2proper_a-IniReader.o `test -f 'IniReader.cpp' || echo '$(srcdir)/'`IniReader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-IniReader.Tpo $(DEPDIR)/libDRAMSim2proper_a-IniReader.Po
#	$(AM_V_CXX)source='IniReader.cpp' object='libDRAMSim2proper_a-IniReader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-IniReader.o `test -f 'IniReader.cpp' || echo '$(srcdir)/'`IniReader.cpp

libDRAMSim2proper_a-IniReader.obj: IniReader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-IniReader.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-IniReader.Tpo -c -o libDRAMSim2proper_a-IniReader.obj `if test -f 'IniReader.cpp'; then $(CYGPATH_W) 'IniReader.cpp'; else $(CYGPATH_W) '$(srcdir)/IniReader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-IniReader.Tpo $(DEPDIR)/libDRAMSim2proper_a-IniReader.Po
#	$(AM_V_CXX)source='IniReader.cpp' object='libDRAMSim2proper_a-IniReader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-IniReader.obj `if test -f 'IniReader.cpp'; then $(CYGPATH_W) 'IniReader.cpp'; else $(CYGPATH_W) '$(srcdir)/IniReader.cpp'; fi`

libDRAMSim2proper_a-MemoryController.o: MemoryController.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-MemoryController.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-MemoryController.Tpo -c -o libDRAMSim2proper_a-MemoryController.o `test -f 'MemoryController.cpp' || echo '$(srcdir)/'`MemoryController.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-MemoryController.Tpo $(DEPDIR)/libDRAMSim2proper_a-MemoryController.Po
#	$(AM_V_CXX)source='MemoryController.cpp' object='libDRAMSim2proper_a-MemoryController.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-MemoryController.o `test -f 'MemoryController.cpp' || echo '$(srcdir)/'`MemoryController.cpp

libDRAMSim2proper_a-MemoryController.obj: MemoryController.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-MemoryController.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-MemoryController.Tpo -c -o libDRAMSim2proper_a-MemoryController.obj `if test -f 'MemoryController.cpp'; then $(CYGPATH_W) 'MemoryController.cpp'; else $(CYGPATH_W) '$(srcdir)/MemoryController.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-MemoryController.Tpo $(DEPDIR)/libDRAMSim2proper_a-MemoryController.Po
#	$(AM_V_CXX)source='MemoryController.cpp' object='libDRAMSim2proper_a-MemoryController.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-MemoryController.obj `if test -f 'MemoryController.cpp'; then $(CYGPATH_W) 'MemoryController.cpp'; else $(CYGPATH_W) '$(srcdir)/MemoryController.cpp'; fi`

libDRAMSim2proper_a-MemorySystem.o: MemorySystem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-MemorySystem.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-MemorySystem.Tpo -c -o libDRAMSim2proper_a-MemorySystem.o `test -f 'MemorySystem.cpp' || echo '$(srcdir)/'`MemorySystem.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-MemorySystem.Tpo $(DEPDIR)/libDRAMSim2proper_a-MemorySystem.Po
#	$(AM_V_CXX)source='MemorySystem.cpp' object='libDRAMSim2proper_a-MemorySystem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-MemorySystem.o `test -f 'MemorySystem.cpp' || echo '$(srcdir)/'`MemorySystem.cpp

libDRAMSim2proper_a-MemorySystem.obj: MemorySystem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-MemorySystem.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-MemorySystem.Tpo -c -o libDRAMSim2proper_a-MemorySystem.obj `if test -f 'MemorySystem.cpp'; then $(CYGPATH_W) 'MemorySystem.cpp'; else $(CYGPATH_W) '$(srcdir)/MemorySystem.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-MemorySystem.Tpo $(DEPDIR)/libDRAMSim2proper_a-MemorySystem.Po
#	$(AM_V_CXX)source='MemorySystem.cpp' object='libDRAMSim2proper_a-MemorySystem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-MemorySystem.obj `if test -f 'MemorySystem.cpp'; then $(CYGPATH_W) 'MemorySystem.cpp'; else $(CYGPATH_W) '$(srcdir)/MemorySystem.cpp'; fi`

libDRAMSim2proper_a-MultiChannelMemorySystem.o: MultiChannelMemorySystem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-MultiChannelMemorySystem.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-MultiChannelMemorySystem.Tpo -c -o libDRAMSim2proper_a-MultiChannelMemorySystem.o `test -f 'MultiChannelMemorySystem.cpp' || echo '$(srcdir)/'`MultiChannelMemorySystem.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-MultiChannelMemorySystem.Tpo $(DEPDIR)/libDRAMSim2proper_a-MultiChannelMemorySystem.Po
#	$(AM_V_CXX)source='MultiChannelMemorySystem.cpp' object='libDRAMSim2proper_a-MultiChannelMemorySystem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-MultiChannelMemorySystem.o `test -f 'MultiChannelMemorySystem.cpp' || echo '$(srcdir)/'`MultiChannelMemorySystem.cpp

libDRAMSim2proper_a-MultiChannelMemorySystem.obj: MultiChannelMemorySystem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-MultiChannelMemorySystem.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-MultiChannelMemorySystem.Tpo -c -o libDRAMSim2proper_a-MultiChannelMemorySystem.obj `if test -f 'MultiChannelMemorySystem.cpp'; then $(CYGPATH_W) 'MultiChannelMemorySystem.cpp'; else $(CYGPATH_W) '$(srcdir)/MultiChannelMemorySystem.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-MultiChannelMemorySystem.Tpo $(DEPDIR)/libDRAMSim2proper_a-MultiChannelMemorySystem.Po
#	$(AM_V_CXX)source='MultiChannelMemorySystem.cpp' object='libDRAMSim2proper_a-MultiChannelMemorySystem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-MultiChannelMemorySystem.obj `if test -f 'MultiChannelMemorySystem.cpp'; then $(CYGPATH_W) 'MultiChannelMemorySystem.cpp'; else $(CYGPATH_W) '$(srcdir)/MultiChannelMemorySystem.cpp'; fi`

libDRAMSim2proper_a-Rank.o: Rank.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-Rank.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-Rank.Tpo -c -o libDRAMSim2proper_a-Rank.o `test -f 'Rank.cpp' || echo '$(srcdir)/'`Rank.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-Rank.Tpo $(DEPDIR)/libDRAMSim2proper_a-Rank.Po
#	$(AM_V_CXX)source='Rank.cpp' object='libDRAMSim2proper_a-Rank.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-Rank.o `test -f 'Rank.cpp' || echo '$(srcdir)/'`Rank.cpp

libDRAMSim2proper_a-Rank.obj: Rank.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-Rank.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-Rank.Tpo -c -o libDRAMSim2proper_a-Rank.obj `if test -f 'Rank.cpp'; then $(CYGPATH_W) 'Rank.cpp'; else $(CYGPATH_W) '$(srcdir)/Rank.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-Rank.Tpo $(DEPDIR)/libDRAMSim2proper_a-Rank.Po
#	$(AM_V_CXX)source='Rank.cpp' object='libDRAMSim2proper_a-Rank.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-Rank.obj `if test -f 'Rank.cpp'; then $(CYGPATH_W) 'Rank.cpp'; else $(CYGPATH_W) '$(srcdir)/Rank.cpp'; fi`

libDRAMSim2proper_a-SimulatorObject.o: SimulatorObject.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-SimulatorObject.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-SimulatorObject.Tpo -c -o libDRAMSim2proper_a-SimulatorObject.o `test -f 'SimulatorObject.cpp' || echo '$(srcdir)/'`SimulatorObject.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-SimulatorObject.Tpo $(DEPDIR)/libDRAMSim2proper_a-SimulatorObject.Po
#	$(AM_V_CXX)source='SimulatorObject.cpp' object='libDRAMSim2proper_a-SimulatorObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-SimulatorObject.o `test -f 'SimulatorObject.cpp' || echo '$(srcdir)/'`SimulatorObject.cpp

libDRAMSim2proper_a-SimulatorObject.obj: SimulatorObject.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-SimulatorObject.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-SimulatorObject.Tpo -c -o libDRAMSim2proper_a-SimulatorObject.obj `if test -f 'SimulatorObject.cpp'; then $(CYGPATH_W) 'SimulatorObject.cpp'; else $(CYGPATH_W) '$(srcdir)/SimulatorObject.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-SimulatorObject.Tpo $(DEPDIR)/libDRAMSim2proper_a-SimulatorObject.Po
#	$(AM_V_CXX)source='SimulatorObject.cpp' object='libDRAMSim2proper_a-SimulatorObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-SimulatorObject.obj `if test -f 'SimulatorObject.cpp'; then $(CYGPATH_W) 'SimulatorObject.cpp'; else $(CYGPATH_W) '$(srcdir)/SimulatorObject.cpp'; fi`

libDRAMSim2proper_a-Transaction.o: Transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-Transaction.o -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-Transaction.Tpo -c -o libDRAMSim2proper_a-Transaction.o `test -f 'Transaction.cpp' || echo '$(srcdir)/'`Transaction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-Transaction.Tpo $(DEPDIR)/libDRAMSim2proper_a-Transaction.Po
#	$(AM_V_CXX)source='Transaction.cpp' object='libDRAMSim2proper_a-Transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-Transaction.o `test -f 'Transaction.cpp' || echo '$(srcdir)/'`Transaction.cpp

libDRAMSim2proper_a-Transaction.obj: Transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libDRAMSim2proper_a-Transaction.obj -MD -MP -MF $(DEPDIR)/libDRAMSim2proper_a-Transaction.Tpo -c -o libDRAMSim2proper_a-Transaction.obj `if test -f 'Transaction.cpp'; then $(CYGPATH_W) 'Transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/Transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libDRAMSim2proper_a-Transaction.Tpo $(DEPDIR)/libDRAMSim2proper_a-Transaction.Po
#	$(AM_V_CXX)source='Transaction.cpp' object='libDRAMSim2proper_a-Transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libDRAMSim2proper_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libDRAMSim2proper_a-Transaction.obj `if test -f 'Transaction.cpp'; then $(CYGPATH_W) 'Transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/Transaction.cpp'; fi`
install-pkginclude_DRAMSim2properHEADERS: $(pkginclude_DRAMSim2proper_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_DRAMSim2proper_HEADERS)'; test -n "$(pkginclude_DRAMSim2properdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_DRAMSim2properdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_DRAMSim2properdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_DRAMSim2properdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_DRAMSim2properdir)" || exit $$?; \
	done

uninstall-pkginclude_DRAMSim2properHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_DRAMSim2proper_HEADERS)'; test -n "$(pkginclude_DRAMSim2properdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_DRAMSim2properdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(DRAMSim2properlibdir)" "$(DESTDIR)$(pkginclude_DRAMSim2properdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-DRAMSim2properlibLIBRARIES clean-generic \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-DRAMSim2properlibLIBRARIES \
	install-pkginclude_DRAMSim2properHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-DRAMSim2properlibLIBRARIES \
	uninstall-pkginclude_DRAMSim2properHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-DRAMSim2properlibLIBRARIES clean-generic cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-DRAMSim2properlibLIBRARIES install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pkginclude_DRAMSim2properHEADERS \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-DRAMSim2properlibLIBRARIES uninstall-am \
	uninstall-pkginclude_DRAMSim2properHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
