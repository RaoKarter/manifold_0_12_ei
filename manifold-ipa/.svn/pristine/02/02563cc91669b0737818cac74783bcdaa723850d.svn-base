//
// @ORIGINAL_AUTHOR: Robert Muth
//
/*! @file
  
 */

#ifdef LEVEL_BASE_H
#error duplicate inclusion
#else
#define LEVEL_BASE_H

// Define macros used by the "extras/componets" headers.
#if defined(TARGET_LINUX)
#define FUND_TC_HOSTOS      FUND_OS_LINUX
#define FUND_TC_TARGETOS    FUND_OS_LINUX
#endif
#if defined(TARGET_WINDOWS)
#define FUND_TC_HOSTOS      FUND_OS_WINDOWS
#define FUND_TC_TARGETOS    FUND_OS_WINDOWS
#endif
#if defined(TARGET_BSD)
#define FUND_TC_HOSTOS      FUND_OS_BSD
#define FUND_TC_TARGETOS    FUND_OS_BSD
#endif
#if defined(TARGET_MAC)
#define FUND_TC_HOSTOS      FUND_OS_MAC
#define FUND_TC_TARGETOS    FUND_OS_MAC
#endif
#if defined(HOST_IA32)
#define FUND_TC_HOSTCPU     FUND_CPU_IA32
#endif
#if defined(TARGET_IA32)
#define FUND_TC_TARGETCPU   FUND_CPU_IA32
#endif
#if defined(HOST_IA32E)
#define FUND_TC_HOSTCPU     FUND_CPU_INTEL64
#endif
#if defined(TARGET_IA32E)
#define FUND_TC_TARGETCPU   FUND_CPU_INTEL64
#endif
#if defined(HOST_IPF)
#define FUND_TC_HOSTCPU     FUND_CPU_IA64
#endif
#if defined(TARGET_IPF)
#define FUND_TC_TARGETCPU   FUND_CPU_IA64
#endif


#include <string>
#include <stdarg.h>

#include "util/intel-fp.hpp"
#include "foundation.PLH"
#include "pin_api_version.TLH"
#include "pin-errtype.h"

#if defined(TARGET_IA32) || defined(TARGET_IA32E)
extern "C" {
#include "xed-iclass-enum.h"
#include "xed-category-enum.h"
}
#endif

namespace LEVEL_BASE
{
using namespace std;


#include "types_base.TLH"
#include "message.PH"
#include "util.PH"

#include "knob.PH"
//#include "stat.PH"
//#include "bigarray.PH"

//#include "tui.PH"

//#include "version.PH"

//#include "reg.PH"
#include "lock.PH"

// FIXME
// rawintool is in base so we have to add reg_xxx.H here too
//
#if defined(TARGET_IA32) || defined(TARGET_IA32E)


#if defined(TARGET_IA32)
#include "fpstate_ia32.PH"
#else
#include "fpstate_ia32e.PH"
#endif

#include "reg_ia32.PH"
#include "reg_partial_ia32.PH"
#include "base_ia32.PH"
GLOBALTYPE typedef xed_category_enum_t CATEGORY;
GLOBALTYPE typedef PREDICATE_IA32 PREDICATE;


#elif defined(TARGET_IPF)

#include "reg_ipf.PH"
#include "base_ipf.PH"
GLOBALTYPE typedef CATEGORY_IPF CATEGORY;
GLOBALTYPE typedef PREDICATE_IPF PREDICATE;
#include "rawins_ipf.PH"

#elif defined(TARGET_DOXYGEN)

/*! @ingroup TYPES_BASE
  Categorization of instructions, can be @ref CATEGORY_IA32, @ref CATEGORY_ARM, or @ref CATEGORY_IPF
*/
GLOBALTYPE typedef XXX CATEGORY;

/*! @ingroup TYPES_BASE
  Can be @ref PREDICATE_IA32, @ref PREDICATE_ARM, or @ref PREDICATE_IPF
*/
GLOBALTYPE typedef XXX PREDICATE;

#else
#error "no target arch defined"
#endif

#include "tls.PH"
#include "exception.PH"

#include "child_process.PH"

#if defined(TARGET_WINDOWS)
#include "os_info_win.PH"
#endif

}
#endif
